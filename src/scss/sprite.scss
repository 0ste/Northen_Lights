// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-next-name: 'arrow_next';
$arrow-next-x: 0px;
$arrow-next-y: 44px;
$arrow-next-offset-x: 0px;
$arrow-next-offset-y: -44px;
$arrow-next-width: 33px;
$arrow-next-height: 37px;
$arrow-next-total-width: 113px;
$arrow-next-total-height: 81px;
$arrow-next-image: '../img/sprite-08454918885114209.png';
$arrow-next: (0px, 44px, 0px, -44px, 33px, 37px, 113px, 81px, '../img/sprite-08454918885114209.png', 'arrow_next', );
$arrow-prev-name: 'arrow_prev';
$arrow-prev-x: 37px;
$arrow-prev-y: 44px;
$arrow-prev-offset-x: -37px;
$arrow-prev-offset-y: -44px;
$arrow-prev-width: 33px;
$arrow-prev-height: 37px;
$arrow-prev-total-width: 113px;
$arrow-prev-total-height: 81px;
$arrow-prev-image: '../img/sprite-08454918885114209.png';
$arrow-prev: (37px, 44px, -37px, -44px, 33px, 37px, 113px, 81px, '../img/sprite-08454918885114209.png', 'arrow_prev', );
$burger-name: 'burger';
$burger-x: 0px;
$burger-y: 0px;
$burger-offset-x: 0px;
$burger-offset-y: 0px;
$burger-width: 40px;
$burger-height: 40px;
$burger-total-width: 113px;
$burger-total-height: 81px;
$burger-image: '../img/sprite-08454918885114209.png';
$burger: (0px, 0px, 0px, 0px, 40px, 40px, 113px, 81px, '../img/sprite-08454918885114209.png', 'burger', );
$close-name: 'close';
$close-x: 44px;
$close-y: 0px;
$close-offset-x: -44px;
$close-offset-y: 0px;
$close-width: 40px;
$close-height: 40px;
$close-total-width: 113px;
$close-total-height: 81px;
$close-image: '../img/sprite-08454918885114209.png';
$close: (44px, 0px, -44px, 0px, 40px, 40px, 113px, 81px, '../img/sprite-08454918885114209.png', 'close', );
$vk-name: 'vk';
$vk-x: 88px;
$vk-y: 0px;
$vk-offset-x: -88px;
$vk-offset-y: 0px;
$vk-width: 25px;
$vk-height: 15px;
$vk-total-width: 113px;
$vk-total-height: 81px;
$vk-image: '../img/sprite-08454918885114209.png';
$vk: (88px, 0px, -88px, 0px, 25px, 15px, 113px, 81px, '../img/sprite-08454918885114209.png', 'vk', );
$spritesheet-width: 113px;
$spritesheet-height: 81px;
$spritesheet-image: '../img/sprite-08454918885114209.png';
$spritesheet-sprites: ($arrow-next, $arrow-prev, $burger, $close, $vk, );
$spritesheet: (113px, 81px, '../img/sprite-08454918885114209.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
