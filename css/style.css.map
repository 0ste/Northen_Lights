{"version":3,"sources":["global.scss","variables.scss","fonts.scss","blocks/header.scss","sprite.scss","blocks/slide-section.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\nhtml {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n}\n\nbody {\n  margin: 0;\n  background-color: $bgc-white;\n  color: $text-color;\n  font-size: $sz-16;\n  font-family: ff-Ubuntu;\n  // line-height: $line-height;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  vertical-align: middle;\n}\n","// $screen-xs:                   480px;\n$screen-sm:                   748px;\n// $screen-md:                   992px;\n$screen-lg:                   1170px;\n// $screen-xl:                   1920px;\n\n$text-color:                  #000;\n\n$font-family:                 'Open Sans_my', sans-serif;\n$font-size:                   14px;\n\n$container-xs:                300px;\n$container-sm:                748px;\n$container-lg:                1170px;\n\n$ff-Jura:    'Jura', sans-serif;\n$ff-Ubuntu:     'Ubuntu', sans-serif;\n$ff-Nord:   'Nord', sans-serif;\n\n\n$sz-16:     16px;\n$sz-50:     50px;\n$sz-20:     20px;\n$sz-30:      30px;\n$sz-14:      14px;\n\n$lh-30:      30px;\n$lh-36:      36px;\n$lh-24:      24px;\n$lg-20:      20px;\n\n$c-pale-green: #e6fffd;\n$c-text: #201c38;\n$c-text-2: #4d4b5c;\n$c-dark: #212027;\n$c-white: #fff;\n\n$bgc-white: #fff;\n$bgc-gray: #f7f7f7;\n$bgc-green: #b2dad0;\n$bgc-cyan: #201b38;\n\n\n\n\n\n\n","// @font-face {\n//   font-family: ...;\n//   src:url();\n// }\n\n@font-face { \n  font-family: 'Jura'; \n  src: url('../fonts/jura-regular-webfont.woff') format('woff');\n       // url('webfont.ttf')  format('truetype'), /* Только если нужна поддержка старых Android, иначе закомментировать */ \n       // url('webfont.woff') format('woff'); \n  font-weight: 400; \n  font-style: normal; \n}\n\n@font-face { \n  font-family: 'Jura'; \n  src: url('../fonts/jura-light-webfont.woff') format('woff'); \n       // url('webfont.ttf')  format('truetype'), /* Только если нужна поддержка старых Android, иначе закомментировать */ \n       // url('webfont.woff') format('woff'); \n  font-weight: 300; \n  font-style: normal; \n}\n\n@font-face { \n  font-family: 'Ubuntu'; \n  src: url('../fonts/ubuntu-medium-webfont.woff') format('woff');\n       // url('webfont.ttf')  format('truetype'), /* Только если нужна поддержка старых Android, иначе закомментировать */ \n       // url('webfont.woff') format('woff'); \n  font-weight: 600; \n  font-style: normal; \n}\n\n@font-face { \n  font-family: 'Ubuntu'; \n  src: url('../fonts/ubuntu-light-webfont.woff') format('woff'); \n       // url('webfont.ttf')  format('truetype'), /* Только если нужна поддержка старых Android, иначе закомментировать */ \n       // url('webfont.woff') format('woff'); \n  font-weight: 300; \n  font-style: normal; \n}\n\n@font-face { \n  font-family: 'Nord'; \n  src: url('../fonts/nordmedium-webfont.woff') format('woff');\n       // url('webfont.ttf')  format('truetype'), /* Только если нужна поддержка старых Android, иначе закомментировать */ \n       // url('fonts/nordmedium-webfont.woff2') format('woff2'); \n  font-weight: normal; \n  font-style: normal; \n}",".header {\n\n\tposition: relative;\n\n\t&__inner{\n\t\tmin-height: 500px;\n\t\tmargin: 0 auto;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\twidth: $container-xs;\n\t\t@media screen and (min-width: $screen-sm) {\n\t\t\twidth: $container-sm;\n\t\t}\n\n\t\t@media screen and (min-width: $screen-lg) {\n\t\t\twidth: $container-lg;\n\t\t}\n\n\t}\n\n}\n\n\n.main-nav{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\ttransform: translate(-100%, 0);\n\theight: 100%;\n\tbackground-color: #1c1531;\n\tdisplay: flex;\n\talign-items: center;\n\ttransition: all 0.325s 0s ease;\n\t// display: none;\n\n\t\t\t&--active {\n\t\t\tcolor: #fff;\n\t\t}\n\t@media screen and (min-width: $screen-sm) {\n\t\tdisplay: block;\n\t\theight: auto;\n\t\ttransform: translate(0, 0);\n\t}\n\t\t&--open{\n\t\t\ttransform: translate(0, 0);\n\t\t}\n\t\t&__list{\n\t\t\tpadding: 0 30px;\n\t\t\tmargin: 0;\n\t\t\tlist-style-type: none;\n\t\t}\n\n}\n.main-nav__link {\n\tcolor: #fff;\n\ttext-decoration: none;\n\tfont-family: $ff-Jura;\n\tfont-size: $sz-14;\n\tline-height: $lh-36;\n\t&--active {\n\t\tcolor: #fff;\n\t}\n}\n\n.main-title{\n\n\t&__head{\n\t\tmargin: 0;\n\t\tcolor: #fff;\n\t\ttext-decoration: none;\n\t\tfont-family: $ff-Nord;\n\t}\n\t&__description {\n\t\tfont-family: $ff-Jura;\n\t\tfont-size: $sz-16;\n\t\tcolor: $c-white;\n\t\tfont-weight: 300;\n\t}\n}\n\n.side-bar{\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbackground-color: #1c1531;\n\topacity: 0.5;\n\tcolor: #fff;\n\theight: 100%;\n\twidth: 40px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twhite-space: nowrap;\n\tz-index: 10;\n\n\t&__vk{\n\t\t@include sprite($vk);\n\t\tposition: absolute;\n\t\ttop: 10px;\n\t}\n\n\t&__link{\n\t\t\ttransform: rotate(-90deg);\n\t\t\tcolor: $c-white;\n\t}\n}\n.nav-burger{\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: 9;\n\t\tmargin: 10px;\n\t@media screen and (min-width: $screen-sm) {\n\t\tdisplay: none;\n\t}\n\t&--close{\n\t\t@include sprite($close);\n\t}\n\t&--hamburger{\n\t\t@include sprite($burger);\n\t}\n}","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$burger-name: 'burger';\n$burger-x: 0px;\n$burger-y: 0px;\n$burger-offset-x: 0px;\n$burger-offset-y: 0px;\n$burger-width: 40px;\n$burger-height: 40px;\n$burger-total-width: 84px;\n$burger-total-height: 59px;\n$burger-image: '../img/sprite-06799302268471115.png';\n$burger: (0px, 0px, 0px, 0px, 40px, 40px, 84px, 59px, '../img/sprite-06799302268471115.png', 'burger', );\n$close-name: 'close';\n$close-x: 44px;\n$close-y: 0px;\n$close-offset-x: -44px;\n$close-offset-y: 0px;\n$close-width: 40px;\n$close-height: 40px;\n$close-total-width: 84px;\n$close-total-height: 59px;\n$close-image: '../img/sprite-06799302268471115.png';\n$close: (44px, 0px, -44px, 0px, 40px, 40px, 84px, 59px, '../img/sprite-06799302268471115.png', 'close', );\n$vk-name: 'vk';\n$vk-x: 0px;\n$vk-y: 44px;\n$vk-offset-x: 0px;\n$vk-offset-y: -44px;\n$vk-width: 25px;\n$vk-height: 15px;\n$vk-total-width: 84px;\n$vk-total-height: 59px;\n$vk-image: '../img/sprite-06799302268471115.png';\n$vk: (0px, 44px, 0px, -44px, 25px, 15px, 84px, 59px, '../img/sprite-06799302268471115.png', 'vk', );\n$spritesheet-width: 84px;\n$spritesheet-height: 59px;\n$spritesheet-image: '../img/sprite-06799302268471115.png';\n$spritesheet-sprites: ($burger, $close, $vk, );\n$spritesheet: (84px, 59px, '../img/sprite-06799302268471115.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n",".slide-section {\n\n  position: relative;\n\n  &__inner {\n    min-height: 400px;\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    width: $container-xs;\n    @media screen and (min-width: $screen-sm) {\n      width: $container-sm;\n    }\n    @media screen and (min-width: $screen-lg) {\n      width: $container-lg;\n    }\n  }\n\n\n&__info {\n    width: 300px;\n    height: 100px;\n    position: relative;\n    overflow: hidden;\n\n}\n\n&__img {\n    margin: 0 -10px;\n}\n\n.slide {\n  min-height: 400px;\n  z-index: 9;\n\n}\n\n.slider {\n     position: absolute;\n     left: 0;\n     top: 0;\n     height: 400px;\n     margin: 0;\n     padding: 0;\n\n   \n   &__item {\n    width: 300px;\n    height: 100px;\n    align-items: center;\n\n    float: left;\n    margin: 0;\n    padding: 0;\n   }\n}\n\n  &__text {\n    margin: 0;\n    padding: 0;\n        width: 300px;\n    height: 400px;\n    align-items: center;\n\n    float: left;\n    margin: 0;\n    padding: 0;\n    position: relative;\n  }\n\n// p {\n//     width: calc(100%/4);\n//     list-style: none;\n//     display: inline;\n//     float: left;\n//     width: 100%;\n// }\n// }\n\n\n\n\n\n// .slide-nav {\n\n// }\n\n// .pagination {\n//   &__item {\n//   }\n// }\n\n}"]}